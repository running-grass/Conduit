syntax = 'proto3';
package database;

message CreateSchemaRequest {
    Schema schema = 1;
}

message CreateSchemaResponse {
    Schema schema = 1;
}

message SetSchemaExtensionRequest {
    SchemaExtension extension = 1;
}

message SetSchemaExtensionResponse {
    Schema schema = 1;
}

message GetSchemaRequest {
    string schema_name = 1;
}

message GetSchemaResponse {
    Schema schema = 1;
}

message GetSchemasRequest {
}

message GetSchemasResponse {
    repeated Schema schemas = 1;
}
message DropCollectionResponse{
    string result = 1;
}

message Schema {
    string name = 1;
    string model_schema = 2;
    string model_options = 3;
    string collection_name = 4;
}

message SchemaExtension {
    string name = 1;
    string model_schema = 2;
}

message FindOneRequest {
    string schema_name = 1;
    string query = 2;
    optional string select = 3;
    repeated string populate = 4;
}

message FindRequest {
    string schema_name = 1;
    string query = 2;
    optional string select = 3;
    optional int32 skip = 4;
    optional int32 limit = 5;
    optional string sort = 6;
    repeated string populate = 7;
}

message QueryResponse {
    string result = 1;
}

message QueryRequest {
    string schema_name = 1;
    string query = 2;
}

message UpdateRequest {
    string schema_name = 1;
    string id = 2;
    string query = 3;
    optional bool update_provided_only = 4;
    repeated string populate = 5;
}

message UpdateManyRequest {
    string schema_name = 1;
    string filter_query = 2;
    string query = 3;
    optional bool update_provided_only = 4;
}

message DropCollectionRequest{
    string schema_name = 1;
    bool delete_data = 2;
}

service DatabaseProvider {
    rpc CreateSchemaFromAdapter(CreateSchemaRequest) returns (CreateSchemaResponse);
    rpc GetSchema (GetSchemaRequest) returns (GetSchemaResponse);
    rpc GetSchemas(GetSchemasRequest) returns (GetSchemasResponse);
    rpc DeleteSchema(DropCollectionRequest) returns (DropCollectionResponse);
    rpc SetSchemaExtension(SetSchemaExtensionRequest) returns (CreateSchemaResponse);
    // Database queries
    rpc FindOne (FindOneRequest) returns (QueryResponse);
    rpc FindMany (FindRequest) returns (QueryResponse);
    rpc Create (QueryRequest) returns (QueryResponse);
    rpc CreateMany(QueryRequest) returns (QueryResponse);
    rpc DeleteOne (QueryRequest) returns (QueryResponse);
    rpc DeleteMany (QueryRequest) returns (QueryResponse);
    rpc FindByIdAndUpdate (UpdateRequest) returns (QueryResponse);
    rpc UpdateMany(UpdateManyRequest) returns (QueryResponse);
    rpc CountDocuments (QueryRequest) returns (QueryResponse);
}
